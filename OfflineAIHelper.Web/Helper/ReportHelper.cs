using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using QuestPDF.Previewer;

namespace OfflineAIHelper.Web.Helper
{
    public class ReportHelper
    {
        public byte[] GenerateSingleTabPdf(string tag, float confidence, string markedImagePath, string humanNote)
        {
            var fullPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", markedImagePath.TrimStart('/'));

            byte[] imageBytes = File.ReadAllBytes(fullPath);

            var now = DateTime.Now.ToString("dd MMM yyyy, hh:mm tt");

            var document = Document.Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(1, Unit.Centimetre);
                    page.DefaultTextStyle(x => x.FontSize(11));

                    page.Header().Text("🧠 Damage Assessment Report").SemiBold().FontSize(16).AlignCenter();

                    page.Content().Column(col =>
                    {
                        col.Item().Text($"🕒 Report Time: {now}");
                        col.Item().Text($"🧠 Prediction: {tag}").Bold();
                        col.Item().Text($"📊 Confidence Score: {confidence:P1}");

                        col.Item().Text("📝 Field Note:").Bold();
                        col.Item().Element(container =>
                        {
                            container.Text(humanNote).Italic().FontColor(Colors.Grey.Darken2);
                        });

                        col.Item().Text("📸 Marked Damage Area:").Bold();

                        col.Item().PaddingTop(15).Element(imageContainer =>
                        {
                            imageContainer.Column(column =>
                            {
                                column.Item().Image(imageBytes).FitWidth();
                            });
                        });
                    });

                    page.Footer().AlignCenter().Text("Generated by Offline AI Assistant | Hack for Gaza");
                });
            });

            return document.GeneratePdf();
        }
    }
}
